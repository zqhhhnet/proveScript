require "armv8-configuration.k"

module VMAXNM
  imports ARMV8-CONFIGURATION
  
  rule <k>
         setDefaultRegs(vmaxnm:Opcode) => .
       ...</k>
       <regstate>
         RSMap:Map => updateMap(RSMap,
           "CONTROL" |-> mi(32, 1)
           "CONTROL_S" |-> mi(32, 1)
           "CONTROL_NS" |-> mi(32, 1)
           "CPACR" |-> mi(32, 3145728)
           "CPACR_S" |-> mi(32, 3145728)
           "CPACR_NS" |-> mi(32, 3145728)
           "NSACR" |-> mi(32, 1024)
           "CPPWR" |-> mi(32, 0)
           "CPPWR_NS" |-> mi(32, 0)
           "CPPWR_S" |-> mi(32, 0)
           "MVFR1" |-> mi(32, 256)
           "EPSR" |-> mi(32, 2048)
           "FPCCR" |-> mi(32, 2147483648)
           "FPCCR_S" |-> mi(32, 2147483648)
           "FPCCR_NS" |-> mi(32, 2147483648)
           "VPR" |-> mi(32, 2048)
           "FPSCR" |-> mi(32, 50331648) /* 0000 0011 0000 0000 0000 0000 0000 0000 */
         )
       </regstate>
 
  
  rule <k> 
         execinstr(vmaxnm:Opcode . S:Label Qd:Q128, Qn:Q128, Qm:Q128, Operands) => .
       ...</k>
       <regstate>
         RSMap:Map => updateMap(RSMap,
         convToRegKeys(Qd) |-> (ifMInt (((((((eqMInt(extractMInt(getReg("CONTROL", RSMap), 31, 32), mi(1,1)) andBool (eqMInt(extractMInt(getReg("CPACR", RSMap), 10, 12), mi(2,3)) andBool (eqMInt(extractMInt(getReg("NSACR", RSMap), 21, 22), mi(1,1))))) andBool eqMInt(extractMInt(getReg("CPPWR", RSMap), 11, 12), mi(1,0))) andBool neMInt(extractMInt(getReg("MVFR1", RSMap), 20, 24), mi(4,0))) andBool (eqMInt(extractMInt(getReg("EPSR", RSMap), 5, 7), mi(2,0)) andBool eqMInt(extractMInt(getReg("EPSR", RSMap), 16, 22), mi(6,2)))) andBool (eqMInt(extractMInt(getReg("FPCCR", RSMap), 31, 32), mi(1,0)) andBool eqMInt(extractMInt(getReg("FPCCR", RSMap), 0, 1), mi(1,1)))) andBool eqMInt(extractMInt(getReg("CONTROL", RSMap), 29, 30), mi(1,0))) andBool eqMInt(extractMInt(getReg("VPR", RSMap), 20, 21), mi(1,1)) ) then (ifMInt (S ==K F32) then ( concatenateMInt( (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 1, 9)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 9, 10), mi(1, 1)))) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 1, 9)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 9, 10), mi(1, 1)))) ) then ( concatenateMInt(mi(8, 127), concatenateMInt(mi(8, 192), concatenateMInt(mi(8, 0), mi(8, 0)))) ) else (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 1, 9)) ==Int MaxExponentBits(8)) andBool ((neMInt(extractMInt(getParentValue(Qn, RSMap), 9, 32), mi(23, 0))) andBool eqMInt(extractMInt(getParentValue(Qn, RSMap), 9, 10), mi(1,0)))) orBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 1, 9)) ==Int MaxExponentBits(8)) andBool ((neMInt(extractMInt(getParentValue(Qm, RSMap), 9, 32), mi(23, 0))) andBool eqMInt(extractMInt(getParentValue(Qm, RSMap), 9, 10), mi(1,0)))) ) then /* ( concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 0, 8), concatenateMInt(mi(8, 128), concatenateMInt(mi(8, 0), mi(8, 0)))) ) */ ( concatenateMInt(mi(8, 127), concatenateMInt(mi(8, 192), concatenateMInt(mi(8, 0), mi(8, 0)))) ) else ( ifMInt ((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 1, 9)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 9, 10), mi(1, 1))) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 0, 8), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 8, 16), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 16, 24), extractMInt(getParentValue(Qm, RSMap), 24, 32))))) else ( ifMInt ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 1, 9)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 9, 10), mi(1, 1))) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 0, 8), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 8, 16), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 16, 24), extractMInt(getParentValue(Qn, RSMap), 24, 32))))) else (ifMInt ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 1, 9)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 9, 32), mi(23, 0)))) then ( ifMInt (eqMInt(extractMInt(getParentValue(Qm, RSMap), 0, 1), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 0, 8), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 8, 16), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 16, 24), extractMInt(getParentValue(Qn, RSMap), 24, 32))))) else (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 0, 8), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 8, 16), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 16, 24), extractMInt(getParentValue(Qm, RSMap), 24, 32))))) ) else (ifMInt ((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 1, 9)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 9, 32), mi(23, 0))) ) then (ifMInt (eqMInt(extractMInt(getParentValue(Qn, RSMap), 0, 1), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 0, 8), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 8, 16), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 16, 24), extractMInt(getParentValue(Qm, RSMap), 24, 32))))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 0, 8), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 8, 16), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 16, 24), extractMInt(getParentValue(Qn, RSMap), 24, 32))))) ) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 1, 9)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 9, 32), mi(23, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 1, 9)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 9, 32), mi(23, 0))) ) ) andBool ugtMInt(extractMInt(getParentValue(Qn, RSMap), 0, 1), extractMInt(getParentValue(Qm, RSMap), 0, 1)) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 0, 8), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 8, 16), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 16, 24), extractMInt(getParentValue(Qm, RSMap), 24, 32))))) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 1, 9)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 9, 32), mi(23, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 1, 9)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 9, 32), mi(23, 0))) ) ) andBool uleMInt(extractMInt(getParentValue(Qn, RSMap), 0, 1), extractMInt(getParentValue(Qm, RSMap), 0, 1)) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 0, 8), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 8, 16), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 16, 24), extractMInt(getParentValue(Qn, RSMap), 24, 32))))) else (ifMInt (MInt2Float(extractMInt(getParentValue(Qn, RSMap), 0, 32), 24, 8) <=Float MInt2Float(extractMInt(getParentValue(Qm, RSMap), 0, 32), 24, 8)) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 0, 8), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 8, 16), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 16, 24), extractMInt(getParentValue(Qm, RSMap), 24, 32))))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 0, 8), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 8, 16), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 16, 24), extractMInt(getParentValue(Qn, RSMap), 24, 32))))) ) ) ) ) ) ) ) ) ) /* first beat end */ , 
         concatenateMInt( (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 33, 41)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 41, 42), mi(1, 1)))) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 33, 41)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 41, 42), mi(1, 1)))) ) then ( concatenateMInt(mi(8, 127), concatenateMInt(mi(8, 192), concatenateMInt(mi(8, 0), mi(8, 0)))) ) else (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 33, 41)) ==Int MaxExponentBits(8)) andBool ((neMInt(extractMInt(getParentValue(Qn, RSMap), 41, 64), mi(23, 0))) andBool eqMInt(extractMInt(getParentValue(Qn, RSMap), 41, 42), mi(1,0)))) orBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 33, 41)) ==Int MaxExponentBits(8)) andBool ((neMInt(extractMInt(getParentValue(Qm, RSMap), 41, 64), mi(23, 0))) andBool eqMInt(extractMInt(getParentValue(Qm, RSMap), 41, 42), mi(1,0)))) ) then /* ( concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 0, 8), concatenateMInt(mi(8, 128), concatenateMInt(mi(8, 0), mi(8, 0)))) ) */ ( concatenateMInt(mi(8, 127), concatenateMInt(mi(8, 192), concatenateMInt(mi(8, 0), mi(8, 0)))) ) else ( ifMInt ((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 33, 41)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 41, 42), mi(1, 1))) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 32, 40), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 40, 48), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 48, 56), extractMInt(getParentValue(Qm, RSMap), 56, 64))))) else ( ifMInt ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 33, 41)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 41, 42), mi(1, 1))) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 32, 40), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 40, 48), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 48, 56), extractMInt(getParentValue(Qn, RSMap), 56, 64))))) else (ifMInt ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 33, 41)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 41, 64), mi(23, 0)))) then ( ifMInt (eqMInt(extractMInt(getParentValue(Qm, RSMap), 32, 33), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 32, 40), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 40, 48), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 48, 56), extractMInt(getParentValue(Qn, RSMap), 56, 64))))) else (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 32, 40), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 40, 48), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 48, 56), extractMInt(getParentValue(Qm, RSMap), 56, 64))))) ) else (ifMInt ((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 33, 41)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 41, 64), mi(23, 0))) ) then (ifMInt (eqMInt(extractMInt(getParentValue(Qn, RSMap), 32, 33), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 32, 40), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 40, 48), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 48, 56), extractMInt(getParentValue(Qm, RSMap), 56, 64))))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 32, 40), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 40, 48), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 48, 56), extractMInt(getParentValue(Qn, RSMap), 56, 64))))) ) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 33, 41)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 41, 64), mi(23, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 33, 41)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 41, 64), mi(23, 0))) ) ) andBool ugtMInt(extractMInt(getParentValue(Qn, RSMap), 32, 33), extractMInt(getParentValue(Qm, RSMap), 32, 33)) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 32, 40), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 40, 48), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 48, 56), extractMInt(getParentValue(Qm, RSMap), 56, 64))))) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 33, 41)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 41, 64), mi(23, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 33, 41)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 41, 64), mi(23, 0))) ) ) andBool uleMInt(extractMInt(getParentValue(Qn, RSMap), 32, 33), extractMInt(getParentValue(Qm, RSMap), 32, 33)) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 32, 40), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 40, 48), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 48, 56), extractMInt(getParentValue(Qn, RSMap), 56, 64))))) else (ifMInt (MInt2Float(extractMInt(getParentValue(Qn, RSMap), 32, 64), 24, 8) <=Float MInt2Float(extractMInt(getParentValue(Qm, RSMap), 32, 64), 24, 8)) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 32, 40), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 40, 48), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 48, 56), extractMInt(getParentValue(Qm, RSMap), 56, 64))))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 32, 40), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 40, 48), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 48, 56), extractMInt(getParentValue(Qn, RSMap), 56, 64))))) ) ) ) ) ) ) ) ) ) /* second beat end */ , 
         concatenateMInt( (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 65, 73)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 73, 74), mi(1, 1)))) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 65, 73)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 73, 74), mi(1, 1)))) ) then ( concatenateMInt(mi(8, 127), concatenateMInt(mi(8, 192), concatenateMInt(mi(8, 0), mi(8, 0)))) ) else (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 65, 73)) ==Int MaxExponentBits(8)) andBool ((neMInt(extractMInt(getParentValue(Qn, RSMap), 73, 96), mi(23, 0))) andBool eqMInt(extractMInt(getParentValue(Qn, RSMap), 73, 74), mi(1,0)))) orBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 65, 73)) ==Int MaxExponentBits(8)) andBool ((neMInt(extractMInt(getParentValue(Qm, RSMap), 73, 96), mi(23, 0))) andBool eqMInt(extractMInt(getParentValue(Qm, RSMap), 73, 74), mi(1,0)))) ) then /* ( concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 0, 8), concatenateMInt(mi(8, 128), concatenateMInt(mi(8, 0), mi(8, 0)))) ) */ ( concatenateMInt(mi(8, 127), concatenateMInt(mi(8, 192), concatenateMInt(mi(8, 0), mi(8, 0)))) ) else ( ifMInt ((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 65, 73)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 73, 74), mi(1, 1))) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 64, 72), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 72, 80), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 80, 88), extractMInt(getParentValue(Qm, RSMap), 88, 96))))) else ( ifMInt ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 65, 73)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 73, 74), mi(1, 1))) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 64, 72), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 72, 80), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 80, 88), extractMInt(getParentValue(Qn, RSMap), 88, 96))))) else (ifMInt ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 65, 73)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 73, 96), mi(23, 0)))) then ( ifMInt (eqMInt(extractMInt(getParentValue(Qm, RSMap), 64, 65), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 64, 72), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 72, 80), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 80, 88), extractMInt(getParentValue(Qn, RSMap), 88, 96))))) else (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 64, 72), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 72, 80), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 80, 88), extractMInt(getParentValue(Qm, RSMap), 88, 96))))) ) else (ifMInt ((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 65, 73)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 73, 96), mi(23, 0))) ) then (ifMInt (eqMInt(extractMInt(getParentValue(Qn, RSMap), 64, 65), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 64, 72), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 72, 80), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 80, 88), extractMInt(getParentValue(Qm, RSMap), 88, 96))))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 64, 72), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 72, 80), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 80, 88), extractMInt(getParentValue(Qn, RSMap), 88, 96))))) ) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 65, 73)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 73, 96), mi(23, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 65, 73)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 73, 96), mi(23, 0))) ) ) andBool ugtMInt(extractMInt(getParentValue(Qn, RSMap), 64, 65), extractMInt(getParentValue(Qm, RSMap), 64, 65)) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 64, 72), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 72, 80), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 80, 88), extractMInt(getParentValue(Qm, RSMap), 88, 96))))) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 65, 73)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 73, 96), mi(23, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 65, 73)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 73, 96), mi(23, 0))) ) ) andBool uleMInt(extractMInt(getParentValue(Qn, RSMap), 64, 65), extractMInt(getParentValue(Qm, RSMap), 64, 65)) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 64, 72), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 72, 80), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 80, 88), extractMInt(getParentValue(Qn, RSMap), 88, 96))))) else (ifMInt (MInt2Float(extractMInt(getParentValue(Qn, RSMap), 64, 96), 24, 8) <=Float MInt2Float(extractMInt(getParentValue(Qm, RSMap), 64, 96), 24, 8)) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 64, 72), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 72, 80), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 80, 88), extractMInt(getParentValue(Qm, RSMap), 88, 96))))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 64, 72), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 72, 80), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 80, 88), extractMInt(getParentValue(Qn, RSMap), 88, 96))))) ) ) ) ) ) ) ) ) ) /* third beat end */, 
         /* last one beat */ (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 97, 105)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 105, 106), mi(1, 1)))) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 97, 105)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 105, 106), mi(1, 1)))) ) then ( concatenateMInt(mi(8, 127), concatenateMInt(mi(8, 192), concatenateMInt(mi(8, 0), mi(8, 0)))) ) else (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 97, 105)) ==Int MaxExponentBits(8)) andBool ((neMInt(extractMInt(getParentValue(Qn, RSMap), 105, 128), mi(23, 0))) andBool eqMInt(extractMInt(getParentValue(Qn, RSMap), 105, 106), mi(1,0)))) orBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 97, 105)) ==Int MaxExponentBits(8)) andBool ((neMInt(extractMInt(getParentValue(Qm, RSMap), 105, 128), mi(23, 0))) andBool eqMInt(extractMInt(getParentValue(Qm, RSMap), 105, 106), mi(1,0)))) ) then /* ( concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 0, 8), concatenateMInt(mi(8, 128), concatenateMInt(mi(8, 0), mi(8, 0)))) ) */ ( concatenateMInt(mi(8, 127), concatenateMInt(mi(8, 192), concatenateMInt(mi(8, 0), mi(8, 0)))) ) else ( ifMInt ((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 97, 105)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 105, 106), mi(1, 1))) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 96, 104), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 104, 112), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 112, 120), extractMInt(getParentValue(Qm, RSMap), 120, 128))))) else ( ifMInt ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 97, 105)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 105, 106), mi(1, 1))) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 96, 104), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 104, 112), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 112, 120), extractMInt(getParentValue(Qn, RSMap), 120, 128))))) else (ifMInt ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 97, 105)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 105, 128), mi(23, 0)))) then ( ifMInt (eqMInt(extractMInt(getParentValue(Qm, RSMap), 96, 97), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 96, 104), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 104, 112), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 112, 120), extractMInt(getParentValue(Qn, RSMap), 120, 128))))) else (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 96, 104), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 104, 112), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 112, 120), extractMInt(getParentValue(Qm, RSMap), 120, 128))))) ) else (ifMInt ((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 97, 105)) ==Int MaxExponentBits(8)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 105, 128), mi(23, 0))) ) then (ifMInt (eqMInt(extractMInt(getParentValue(Qn, RSMap), 96, 97), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 96, 104), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 104, 112), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 112, 120), extractMInt(getParentValue(Qm, RSMap), 120, 128))))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 96, 104), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 104, 112), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 112, 120), extractMInt(getParentValue(Qn, RSMap), 120, 128))))) ) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 97, 105)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 105, 128), mi(23, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 97, 105)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 105, 128), mi(23, 0))) ) ) andBool ugtMInt(extractMInt(getParentValue(Qn, RSMap), 96, 97), extractMInt(getParentValue(Qm, RSMap), 96, 97)) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 96, 104), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 104, 112), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 112, 120), extractMInt(getParentValue(Qm, RSMap), 120, 128))))) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 97, 105)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 105, 128), mi(23, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 97, 105)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 105, 128), mi(23, 0))) ) ) andBool uleMInt(extractMInt(getParentValue(Qn, RSMap), 96, 97), extractMInt(getParentValue(Qm, RSMap), 96, 97)) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 96, 104), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 104, 112), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 112, 120), extractMInt(getParentValue(Qn, RSMap), 120, 128))))) else (ifMInt (MInt2Float(extractMInt(getParentValue(Qn, RSMap), 96, 128), 24, 8) <=Float MInt2Float(extractMInt(getParentValue(Qm, RSMap), 96, 128), 24, 8)) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 96, 104), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 104, 112), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 112, 120), extractMInt(getParentValue(Qm, RSMap), 120, 128))))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 96, 104), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 104, 112), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 112, 120), extractMInt(getParentValue(Qn, RSMap), 120, 128))))) ) ) ) ) ) ) ) ) ) ) ) ) )
         else /* need to fix F16 size */ (ifMInt (S ==K F16) then ( concatenateMInt( /* first beat */ concatenateMInt( (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 1, 6)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 6, 7), mi(1, 1)))) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 1, 6)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 6, 7), mi(1, 1))))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then ( concatenateMInt(mi(8, 126), mi(8, 0)) ) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 1, 6)) ==Int MaxExponentBits(5)) andBool ((neMInt(extractMInt(getParentValue(Qn, RSMap), 6, 16), mi(10, 0))) andBool eqMInt(extractMInt(getParentValue(Qn, RSMap), 6, 7), mi(1,0)))) orBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 1, 6)) ==Int MaxExponentBits(5)) andBool ((neMInt(extractMInt(getParentValue(Qm, RSMap), 6, 16), mi(10, 0))) andBool eqMInt(extractMInt(getParentValue(Qm, RSMap), 6, 7), mi(1,0))))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then /* ( concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 0, 8), concatenateMInt(mi(8, 128), concatenateMInt(mi(8, 0), mi(8, 0)))) ) */ ( concatenateMInt(mi(8, 126), mi(8, 0)) ) else ( ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 1, 6)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 6, 7), mi(1, 1)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 0, 8), extractMInt(getParentValue(Qm, RSMap), 8, 16))) else ( ifMInt (((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 1, 6)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 6, 7), mi(1, 1)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 0, 8), extractMInt(getParentValue(Qn, RSMap), 8, 16))) else (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 1, 6)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 6, 16), mi(10, 0)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then ( ifMInt (eqMInt(extractMInt(getParentValue(Qm, RSMap), 0, 1), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 0, 8), extractMInt(getParentValue(Qm, RSMap), 8, 16))) else (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 0, 8), extractMInt(getParentValue(Qm, RSMap), 8, 16))) ) else (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 1, 6)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 6, 16), mi(10, 0)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (ifMInt (eqMInt(extractMInt(getParentValue(Qn, RSMap), 0, 1), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 0, 8), extractMInt(getParentValue(Qm, RSMap), 8, 16))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 0, 8), extractMInt(getParentValue(Qn, RSMap), 8, 16))) ) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 1, 6)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 6, 16), mi(10, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 1, 6)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 6, 16), mi(10, 0))) ) ) andBool ugtMInt(extractMInt(getParentValue(Qn, RSMap), 0, 1), extractMInt(getParentValue(Qm, RSMap), 0, 1)) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 0, 8), extractMInt(getParentValue(Qm, RSMap), 8, 16))) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 1, 6)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 6, 16), mi(10, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 1, 6)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 6, 16), mi(10, 0))) ) ) andBool uleMInt(extractMInt(getParentValue(Qn, RSMap), 0, 1), extractMInt(getParentValue(Qm, RSMap), 0, 1)) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 0, 8), extractMInt(getParentValue(Qn, RSMap), 8, 16))) else (ifMInt (MInt2Float(extractMInt(getParentValue(Qn, RSMap), 0, 16), 11, 5) <=Float MInt2Float(extractMInt(getParentValue(Qm, RSMap), 0, 16), 11, 5)) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 0, 8), extractMInt(getParentValue(Qm, RSMap), 8, 16))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 0, 8), extractMInt(getParentValue(Qn, RSMap), 8, 16))) ) ) ) ) ) ) ) ) ) /* 0:15 bit */, (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 17, 22)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 22, 23), mi(1, 1)))) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 17, 22)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 22, 23), mi(1, 1))))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then ( concatenateMInt(mi(8, 126), mi(8, 0)) ) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 17, 22)) ==Int MaxExponentBits(5)) andBool ((neMInt(extractMInt(getParentValue(Qn, RSMap), 22, 32), mi(10, 0))) andBool eqMInt(extractMInt(getParentValue(Qn, RSMap), 22, 23), mi(1,0)))) orBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 17, 22)) ==Int MaxExponentBits(5)) andBool ((neMInt(extractMInt(getParentValue(Qm, RSMap), 22, 32), mi(10, 0))) andBool eqMInt(extractMInt(getParentValue(Qm, RSMap), 22, 23), mi(1,0))))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then /* ( concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 0, 8), concatenateMInt(mi(8, 128), concatenateMInt(mi(8, 0), mi(8, 0)))) ) */ ( concatenateMInt(mi(8, 126), mi(8, 0)) ) else ( ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 17, 22)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 22, 23), mi(1, 1)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 16, 24), extractMInt(getParentValue(Qm, RSMap), 24, 32))) else ( ifMInt (((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 17, 22)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 22, 23), mi(1, 1)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 16, 24), extractMInt(getParentValue(Qn, RSMap), 24, 32))) else (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 17, 22)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 22, 32), mi(10, 0)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then ( ifMInt (eqMInt(extractMInt(getParentValue(Qm, RSMap), 16, 17), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 16, 24), extractMInt(getParentValue(Qm, RSMap), 24, 32))) else (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 16, 24), extractMInt(getParentValue(Qm, RSMap), 24, 32))) ) else (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 17, 22)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 22, 32), mi(10, 0)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (ifMInt (eqMInt(extractMInt(getParentValue(Qn, RSMap), 16, 17), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 16, 24), extractMInt(getParentValue(Qm, RSMap), 24, 32))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 16, 24), extractMInt(getParentValue(Qn, RSMap), 24, 32))) ) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 17, 22)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 22, 32), mi(10, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 17, 22)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 22, 32), mi(10, 0))) ) ) andBool ugtMInt(extractMInt(getParentValue(Qn, RSMap), 16, 17), extractMInt(getParentValue(Qm, RSMap), 16, 17)) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 16, 24), extractMInt(getParentValue(Qm, RSMap), 24, 32))) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 17, 22)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 22, 32), mi(10, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 17, 22)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 22, 32), mi(10, 0))) ) ) andBool uleMInt(extractMInt(getParentValue(Qn, RSMap), 16, 17), extractMInt(getParentValue(Qm, RSMap), 16, 17)) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 16, 24), extractMInt(getParentValue(Qn, RSMap), 24, 32))) else (ifMInt (MInt2Float(extractMInt(getParentValue(Qn, RSMap), 16, 32), 11, 5) <=Float MInt2Float(extractMInt(getParentValue(Qm, RSMap), 16, 32), 11, 5)) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 16, 24), extractMInt(getParentValue(Qm, RSMap), 24, 32))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 16, 24), extractMInt(getParentValue(Qn, RSMap), 24, 32))) ) ) ) ) ) ) ) ) ) /* 16:31 */) , 
         concatenateMInt( /* second beat */ concatenateMInt( (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 33, 38)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 38, 39), mi(1, 1)))) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 33, 38)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 38, 39), mi(1, 1))))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then ( concatenateMInt(mi(8, 126), mi(8, 0)) ) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 33, 38)) ==Int MaxExponentBits(5)) andBool ((neMInt(extractMInt(getParentValue(Qn, RSMap), 38, 48), mi(10, 0))) andBool eqMInt(extractMInt(getParentValue(Qn, RSMap), 33, 34), mi(1,0)))) orBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 33, 38)) ==Int MaxExponentBits(5)) andBool ((neMInt(extractMInt(getParentValue(Qm, RSMap), 38, 48), mi(10, 0))) andBool eqMInt(extractMInt(getParentValue(Qm, RSMap), 38, 39), mi(1,0))))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then /* ( concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 0, 8), concatenateMInt(mi(8, 128), concatenateMInt(mi(8, 0), mi(8, 0)))) ) */ ( concatenateMInt(mi(8, 126), mi(8, 0)) ) else ( ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 33, 38)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 38, 39), mi(1, 1)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 32, 40), extractMInt(getParentValue(Qm, RSMap), 40, 48))) else ( ifMInt (((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 33, 38)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 38, 39), mi(1, 1)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 32, 40), extractMInt(getParentValue(Qn, RSMap), 40, 48))) else (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 33, 38)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 38, 48), mi(10, 0)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then ( ifMInt (eqMInt(extractMInt(getParentValue(Qm, RSMap), 32, 33), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 32, 40), extractMInt(getParentValue(Qm, RSMap), 40, 48))) else (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 32, 40), extractMInt(getParentValue(Qm, RSMap), 40, 48))) ) else (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 33, 38)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 38, 48), mi(10, 0)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (ifMInt (eqMInt(extractMInt(getParentValue(Qn, RSMap), 32, 33), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 32, 40), extractMInt(getParentValue(Qm, RSMap), 40, 48))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 32, 40), extractMInt(getParentValue(Qn, RSMap), 40, 48))) ) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 33, 38)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 38, 48), mi(10, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 33, 38)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 38, 48), mi(10, 0))) ) ) andBool ugtMInt(extractMInt(getParentValue(Qn, RSMap), 32, 33), extractMInt(getParentValue(Qm, RSMap), 32, 33)) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 32, 40), extractMInt(getParentValue(Qm, RSMap), 40, 48))) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 33, 38)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 38, 48), mi(10, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 33, 38)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 38, 48), mi(10, 0))) ) ) andBool uleMInt(extractMInt(getParentValue(Qn, RSMap), 32, 33), extractMInt(getParentValue(Qm, RSMap), 32, 33)) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 32, 40), extractMInt(getParentValue(Qn, RSMap), 40, 48))) else (ifMInt (MInt2Float(extractMInt(getParentValue(Qn, RSMap), 32, 48), 11, 5) <=Float MInt2Float(extractMInt(getParentValue(Qm, RSMap), 32, 48), 11, 5)) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 32, 40), extractMInt(getParentValue(Qm, RSMap), 40, 48))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 32, 40), extractMInt(getParentValue(Qn, RSMap), 40, 48))) ) ) ) ) ) ) ) ) ) /* 32:47 bit */, (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 49, 54)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 54, 55), mi(1, 1)))) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 49, 54)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 54, 55), mi(1, 1))))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then ( concatenateMInt(mi(8, 126), mi(8, 0)) ) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 49, 54)) ==Int MaxExponentBits(5)) andBool ((neMInt(extractMInt(getParentValue(Qn, RSMap), 54, 64), mi(10, 0))) andBool eqMInt(extractMInt(getParentValue(Qn, RSMap), 54, 55), mi(1,0)))) orBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 49, 54)) ==Int MaxExponentBits(5)) andBool ((neMInt(extractMInt(getParentValue(Qm, RSMap), 54, 64), mi(10, 0))) andBool eqMInt(extractMInt(getParentValue(Qm, RSMap), 54, 55), mi(1,0))))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then /* ( concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 0, 8), concatenateMInt(mi(8, 128), concatenateMInt(mi(8, 0), mi(8, 0)))) ) */ ( concatenateMInt(mi(8, 126), mi(8, 0)) ) else ( ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 49, 54)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 54, 55), mi(1, 1)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 48, 56), extractMInt(getParentValue(Qm, RSMap), 56, 64))) else ( ifMInt (((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 49, 54)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 54, 55), mi(1, 1)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 48, 56), extractMInt(getParentValue(Qn, RSMap), 56, 64))) else (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 49, 54)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 54, 64), mi(10, 0)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then ( ifMInt (eqMInt(extractMInt(getParentValue(Qm, RSMap), 48, 49), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 48, 56), extractMInt(getParentValue(Qm, RSMap), 56, 64))) else (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 48, 56), extractMInt(getParentValue(Qm, RSMap), 56, 64))) ) else (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 49, 54)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 54, 64), mi(10, 0)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (ifMInt (eqMInt(extractMInt(getParentValue(Qn, RSMap), 48, 49), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 48, 56), extractMInt(getParentValue(Qm, RSMap), 56, 64))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 48, 56), extractMInt(getParentValue(Qn, RSMap), 56, 64))) ) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 49, 54)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 54, 64), mi(10, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 49, 54)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 54, 64), mi(10, 0))) ) ) andBool ugtMInt(extractMInt(getParentValue(Qn, RSMap), 48, 49), extractMInt(getParentValue(Qm, RSMap), 48, 49)) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 48, 56), extractMInt(getParentValue(Qm, RSMap), 56, 64))) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 49, 54)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 54, 64), mi(10, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 49, 54)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 54, 64), mi(10, 0))) ) ) andBool uleMInt(extractMInt(getParentValue(Qn, RSMap), 48, 49), extractMInt(getParentValue(Qm, RSMap), 48, 49)) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 48, 56), extractMInt(getParentValue(Qn, RSMap), 56, 64))) else (ifMInt (MInt2Float(extractMInt(getParentValue(Qn, RSMap), 48, 64), 11, 5) <=Float MInt2Float(extractMInt(getParentValue(Qm, RSMap), 48, 64), 11, 5)) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 48, 56), extractMInt(getParentValue(Qm, RSMap), 56, 64))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 48, 56), extractMInt(getParentValue(Qn, RSMap), 56, 64))) ) ) ) ) ) ) ) ) ) /* 48:63 */)  , 
         concatenateMInt(/* third beat */ concatenateMInt( (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 65, 70)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 70, 71), mi(1, 1)))) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 65, 70)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 70, 71), mi(1, 1))))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then ( concatenateMInt(mi(8, 126), mi(8, 0)) ) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 65, 70)) ==Int MaxExponentBits(5)) andBool ((neMInt(extractMInt(getParentValue(Qn, RSMap), 70, 80), mi(10, 0))) andBool eqMInt(extractMInt(getParentValue(Qn, RSMap), 70, 71), mi(1,0)))) orBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 65, 70)) ==Int MaxExponentBits(5)) andBool ((neMInt(extractMInt(getParentValue(Qm, RSMap), 70, 80), mi(10, 0))) andBool eqMInt(extractMInt(getParentValue(Qm, RSMap), 70, 71), mi(1,0))))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then /* ( concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 0, 8), concatenateMInt(mi(8, 128), concatenateMInt(mi(8, 0), mi(8, 0)))) ) */ ( concatenateMInt(mi(8, 126), mi(8, 0)) ) else ( ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 65, 70)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 70, 71), mi(1, 1)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 64, 72), extractMInt(getParentValue(Qm, RSMap), 72, 80))) else ( ifMInt (((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 65, 70)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 70, 71), mi(1, 1)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 64, 72), extractMInt(getParentValue(Qn, RSMap), 72, 80))) else (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 65, 70)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 70, 80), mi(10, 0)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then ( ifMInt (eqMInt(extractMInt(getParentValue(Qm, RSMap), 64, 65), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 64, 72), extractMInt(getParentValue(Qm, RSMap), 72, 80))) else (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 64, 72), extractMInt(getParentValue(Qm, RSMap), 72, 80))) ) else (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 65, 70)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 70, 80), mi(10, 0)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (ifMInt (eqMInt(extractMInt(getParentValue(Qn, RSMap), 64, 65), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 64, 72), extractMInt(getParentValue(Qm, RSMap), 72, 80))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 64, 72), extractMInt(getParentValue(Qn, RSMap), 72, 80))) ) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 65, 70)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 70, 80), mi(10, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 65, 70)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 70, 80), mi(10, 0))) ) ) andBool ugtMInt(extractMInt(getParentValue(Qn, RSMap), 64, 65), extractMInt(getParentValue(Qm, RSMap), 64, 65)) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 64, 72), extractMInt(getParentValue(Qm, RSMap), 72, 80))) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 65, 70)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 70, 80), mi(10, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 65, 70)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 70, 80), mi(10, 0))) ) ) andBool uleMInt(extractMInt(getParentValue(Qn, RSMap), 64, 65), extractMInt(getParentValue(Qm, RSMap), 64, 65)) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 64, 72), extractMInt(getParentValue(Qn, RSMap), 72, 80))) else (ifMInt (MInt2Float(extractMInt(getParentValue(Qn, RSMap), 64, 80), 11, 5) <=Float MInt2Float(extractMInt(getParentValue(Qm, RSMap), 64, 80), 11, 5)) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 64, 72), extractMInt(getParentValue(Qm, RSMap), 72, 80))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 64, 72), extractMInt(getParentValue(Qn, RSMap), 72, 80))) ) ) ) ) ) ) ) ) ) /* 64:79 bit */, 
         (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 81, 86)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 86, 87), mi(1, 1)))) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 81, 86)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 86, 87), mi(1, 1))))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then ( concatenateMInt(mi(8, 126), mi(8, 0)) ) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 81, 86)) ==Int MaxExponentBits(5)) andBool ((neMInt(extractMInt(getParentValue(Qn, RSMap), 86, 96), mi(10, 0))) andBool eqMInt(extractMInt(getParentValue(Qn, RSMap), 86, 87), mi(1,0)))) orBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 81, 86)) ==Int MaxExponentBits(5)) andBool ((neMInt(extractMInt(getParentValue(Qm, RSMap), 86, 96), mi(10, 0))) andBool eqMInt(extractMInt(getParentValue(Qm, RSMap), 86, 87), mi(1,0))))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then /* ( concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 0, 8), concatenateMInt(mi(8, 128), concatenateMInt(mi(8, 0), mi(8, 0)))) ) */ ( concatenateMInt(mi(8, 126), mi(8, 0)) ) else ( ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 81, 86)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 86, 87), mi(1, 1)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 80, 88), extractMInt(getParentValue(Qm, RSMap), 88, 96))) else ( ifMInt (((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 81, 86)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 86, 87), mi(1, 1)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 80, 88), extractMInt(getParentValue(Qn, RSMap), 88, 96))) else (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 81, 86)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 86, 96), mi(10, 0)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then ( ifMInt (eqMInt(extractMInt(getParentValue(Qm, RSMap), 80, 81), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 80, 88), extractMInt(getParentValue(Qm, RSMap), 88, 96))) else (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 80, 88), extractMInt(getParentValue(Qm, RSMap), 88, 96))) ) else (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 81, 86)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 86, 96), mi(10, 0)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (ifMInt (eqMInt(extractMInt(getParentValue(Qn, RSMap), 80, 81), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 80, 88), extractMInt(getParentValue(Qm, RSMap), 88, 96))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 80, 88), extractMInt(getParentValue(Qn, RSMap), 88, 96))) ) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 81, 86)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 86, 96), mi(10, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 81, 86)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 86, 96), mi(10, 0))) ) ) andBool ugtMInt(extractMInt(getParentValue(Qn, RSMap), 80, 81), extractMInt(getParentValue(Qm, RSMap), 80, 81)) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 80, 88), extractMInt(getParentValue(Qm, RSMap), 88, 96))) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 81, 86)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 86, 96), mi(10, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 81, 86)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 86, 96), mi(10, 0))) ) ) andBool uleMInt(extractMInt(getParentValue(Qn, RSMap), 80, 81), extractMInt(getParentValue(Qm, RSMap), 80, 81)) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 80, 88), extractMInt(getParentValue(Qn, RSMap), 88, 96))) else (ifMInt (MInt2Float(extractMInt(getParentValue(Qn, RSMap), 80, 96), 11, 5) <=Float MInt2Float(extractMInt(getParentValue(Qm, RSMap), 80, 96), 11, 5)) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 80, 88), extractMInt(getParentValue(Qm, RSMap), 88, 96))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 80, 88), extractMInt(getParentValue(Qn, RSMap), 88, 96))) ) ) ) ) ) ) ) ) ) /* 80:95 */) , 
         /* last beat */ concatenateMInt( (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 97, 102)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 102, 103), mi(1, 1)))) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 97, 102)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 102, 103), mi(1, 1))))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then ( concatenateMInt(mi(8, 126), mi(8, 0)) ) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 97, 102)) ==Int MaxExponentBits(5)) andBool ((neMInt(extractMInt(getParentValue(Qn, RSMap), 102, 112), mi(10, 0))) andBool eqMInt(extractMInt(getParentValue(Qn, RSMap), 102, 103), mi(1,0)))) orBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 97, 102)) ==Int MaxExponentBits(5)) andBool ((neMInt(extractMInt(getParentValue(Qm, RSMap), 102, 112), mi(10, 0))) andBool eqMInt(extractMInt(getParentValue(Qm, RSMap), 102, 103), mi(1,0))))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then /* ( concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 0, 8), concatenateMInt(mi(8, 128), concatenateMInt(mi(8, 0), mi(8, 0)))) ) */ ( concatenateMInt(mi(8, 126), mi(8, 0)) ) else ( ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 97, 102)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 102, 103), mi(1, 1)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 96, 104), extractMInt(getParentValue(Qm, RSMap), 104, 112))) else ( ifMInt (((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 97, 102)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 102, 103), mi(1, 1)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 96, 104), extractMInt(getParentValue(Qn, RSMap), 104, 112))) else (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 97, 102)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 102, 112), mi(10, 0)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then ( ifMInt (eqMInt(extractMInt(getParentValue(Qm, RSMap), 96, 97), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 96, 104), extractMInt(getParentValue(Qm, RSMap), 104, 112))) else (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 96, 104), extractMInt(getParentValue(Qm, RSMap), 104, 112))) ) else (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 97, 102)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 102, 112), mi(10, 0)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (ifMInt (eqMInt(extractMInt(getParentValue(Qn, RSMap), 96, 97), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 96, 104), extractMInt(getParentValue(Qm, RSMap), 104, 112))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 96, 104), extractMInt(getParentValue(Qn, RSMap), 104, 112))) ) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 97, 102)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 102, 112), mi(10, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 97, 102)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 102, 112), mi(10, 0))) ) ) andBool ugtMInt(extractMInt(getParentValue(Qn, RSMap), 96, 97), extractMInt(getParentValue(Qm, RSMap), 96, 97)) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 96, 104), extractMInt(getParentValue(Qm, RSMap), 104, 112))) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 97, 102)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 102, 112), mi(10, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 97, 102)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 102, 112), mi(10, 0))) ) ) andBool uleMInt(extractMInt(getParentValue(Qn, RSMap), 96, 97), extractMInt(getParentValue(Qm, RSMap), 96, 97)) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 96, 104), extractMInt(getParentValue(Qn, RSMap), 104, 112))) else (ifMInt (MInt2Float(extractMInt(getParentValue(Qn, RSMap), 96, 112), 11, 5) <=Float MInt2Float(extractMInt(getParentValue(Qm, RSMap), 96, 112), 11, 5)) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 96, 104), extractMInt(getParentValue(Qm, RSMap), 104, 112))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 96, 104), extractMInt(getParentValue(Qn, RSMap), 104, 112))) ) ) ) ) ) ) ) ) ) /* 96:111 bit */, (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 113, 118)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 118, 119), mi(1, 1)))) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 113, 118)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 118, 119), mi(1, 1))))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then ( concatenateMInt(mi(8, 126), mi(8, 0)) ) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 113, 118)) ==Int MaxExponentBits(5)) andBool ((neMInt(extractMInt(getParentValue(Qn, RSMap), 118, 128), mi(10, 0))) andBool eqMInt(extractMInt(getParentValue(Qn, RSMap), 118, 119), mi(1,0)))) orBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 113, 118)) ==Int MaxExponentBits(5)) andBool ((neMInt(extractMInt(getParentValue(Qm, RSMap), 118, 128), mi(10, 0))) andBool eqMInt(extractMInt(getParentValue(Qm, RSMap), 118, 119), mi(1,0))))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then /* ( concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 0, 8), concatenateMInt(mi(8, 128), concatenateMInt(mi(8, 0), mi(8, 0)))) ) */ ( concatenateMInt(mi(8, 126), mi(8, 0)) ) else ( ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 113, 118)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 118, 119), mi(1, 1)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 112, 120), extractMInt(getParentValue(Qm, RSMap), 120, 128))) else ( ifMInt (((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 113, 118)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 118, 119), mi(1, 1)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 112, 120), extractMInt(getParentValue(Qn, RSMap), 120, 128))) else (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 113, 118)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 118, 128), mi(10, 0)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then ( ifMInt (eqMInt(extractMInt(getParentValue(Qm, RSMap), 112, 113), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 112, 120), extractMInt(getParentValue(Qm, RSMap), 120, 128))) else (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 112, 120), extractMInt(getParentValue(Qm, RSMap), 120, 128))) ) else (ifMInt (((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 113, 118)) ==Int MaxExponentBits(5)) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 118, 128), mi(10, 0)))) andBool (eqMInt(extractMInt(getReg("FPSCR", RSMap), 5, 6), mi(1,0))) ) then (ifMInt (eqMInt(extractMInt(getParentValue(Qn, RSMap), 112, 113), mi(1, 1))) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 112, 120), extractMInt(getParentValue(Qm, RSMap), 120, 128))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 112, 120), extractMInt(getParentValue(Qn, RSMap), 120, 128))) ) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 113, 118)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 118, 128), mi(10, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 113, 118)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 118, 128), mi(10, 0))) ) ) andBool ugtMInt(extractMInt(getParentValue(Qn, RSMap), 112, 113), extractMInt(getParentValue(Qm, RSMap), 112, 113)) ) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 112, 120), extractMInt(getParentValue(Qm, RSMap), 120, 128))) else (ifMInt ((((uvalueMInt(extractMInt(getParentValue(Qn, RSMap), 113, 118)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qn, RSMap), 118, 128), mi(10, 0))) ) andBool ((uvalueMInt(extractMInt(getParentValue(Qm, RSMap), 113, 118)) ==Int 0) andBool (eqMInt(extractMInt(getParentValue(Qm, RSMap), 118, 128), mi(10, 0))) ) ) andBool uleMInt(extractMInt(getParentValue(Qn, RSMap), 112, 113), extractMInt(getParentValue(Qm, RSMap), 112, 113)) ) then (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 112, 120), extractMInt(getParentValue(Qn, RSMap), 112, 120))) else (ifMInt (MInt2Float(extractMInt(getParentValue(Qn, RSMap), 112, 128), 11, 5) <=Float MInt2Float(extractMInt(getParentValue(Qm, RSMap), 112, 128), 11, 5)) then (concatenateMInt( extractMInt(getParentValue(Qm, RSMap), 112, 120), extractMInt(getParentValue(Qm, RSMap), 120, 128))) else (concatenateMInt( extractMInt(getParentValue(Qn, RSMap), 112, 120), extractMInt(getParentValue(Qn, RSMap), 120, 128))) ) ) ) ) ) ) ) ) ) /* 112:128 */) 
         ) ) ) ) else mi(128, -1)
             )
            ) else mi(128, -1)
           ) 
         )
       </regstate>
endmodule
