require "armv8-configuration.k"

module VMAX
  imports ARMV8-CONFIGURATION
  
  /*@
  rule S8:Label => mi(3, 0)
  rule U8:Label => mi(3, 1)
  rule S16:Label => mi(3, 2)
  rule U16:Label => mi(3, 3)
  rule S32:Label => mi(3, 4)
  rule U32:Label => mi(3, 5)
  */
  
  /*
  context execinstr (vmax:Opcode . HOLE:Label Qd:Q128, Qm:Q128, Qn:Q128, Operands) [result(Label)]
  */
  /*
  rule <k> 
         execinstr(vmax:Opcode . S:Label Qd:Q128, Qm:Q128, Qn:Q128, .Operands) =>
         setDefaultRegs(S) ~>
         execinstr(vmax . S Qd, Qm, Qn, .Operands)
       </k>
    */
  rule <k>
         setDefaultRegs(vmax:Opcode) => .
       ...</k>
       <regstate>
         RSMap:Map => updateMap(RSMap,
           "CONTROL" |-> mi(32, 1)
           "CONTROL_S" |-> mi(32, 1)
           "CONTROL_NS" |-> mi(32, 1)
           "CPACR" |-> mi(32, 3145728)
           "CPACR_S" |-> mi(32, 3145728)
           "CPACR_NS" |-> mi(32, 3145728)
           "NSACR" |-> mi(32, 1024)
           "CPPWR" |-> mi(32, 0)
           "CPPWR_NS" |-> mi(32, 0)
           "CPPWR_S" |-> mi(32, 0)
           "MVFR1" |-> mi(32, 256)
           "EPSR" |-> mi(32, 2048)
           "FPCCR" |-> mi(32, 0)
           "FPCCR_S" |-> mi(32, 0)
           "FPCCR_NS" |-> mi(32, 0)
           "VPR" |-> mi(32, 2048)
         )
       </regstate>
  
  /*
  rule <k>
         setdRegs(S:Label) ~> execinstr(vmax:Opcode . S:Label Qd:Q128, Qm:Q128, Qn:Q128, .Operands)  => .
       ...</k>
    */     
  
  rule <k>
         execinstr(vmax:Opcode . S:Label Qd:Q128, Qm:Q128, Qn:Q128, .Operands) => .
       ...</k> 
       
       <regstate>
         RSMap:Map => updateMap(RSMap,
         "CONTROL" |-> mi(32, 0)
         
         convToRegKeys(Qd) |-> /* S8 size */ (ifMInt (((((((eqMInt(extractMInt(getReg("CONTROL", RSMap), 31, 32), mi(1,1)) andBool (eqMInt(extractMInt(getReg("CPACR", RSMap), 10, 12), mi(2,3)) andBool (eqMInt(extractMInt(getReg("NSACR", RSMap), 21, 22), mi(1,1))))) andBool eqMInt(extractMInt(getReg("CPPWR", RSMap), 11, 12), mi(1,0))) andBool neMInt(extractMInt(getReg("MVFR1", RSMap), 20, 24), mi(4,0))) andBool (eqMInt(extractMInt(getReg("EPSR", RSMap), 5, 7), mi(2,0)) andBool eqMInt(extractMInt(getReg("EPSR", RSMap), 16, 22), mi(6,2)))) andBool (eqMInt(extractMInt(getReg("FPCCR", RSMap), 31, 32), mi(1,0)) andBool eqMInt(extractMInt(getReg("FPCCR", RSMap), 0, 1), mi(1,0)))) andBool eqMInt(extractMInt(getReg("CONTROL", RSMap), 29, 30), mi(1,0))) andBool eqMInt(extractMInt(getReg("VPR", RSMap), 20, 21), mi(1,1)) ) then (ifMInt (S ==K S8) then concatenateMInt( (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 0, 8), extractMInt(getParentValue(Qn, RSMap), 0, 8)) then extractMInt(getParentValue(Qm, RSMap), 0, 8) else extractMInt(getParentValue(Qn, RSMap), 0, 8)), concatenateMInt( (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 8, 16), extractMInt(getParentValue(Qn, RSMap), 8, 16)) then extractMInt(getParentValue(Qm, RSMap), 8, 16) else extractMInt(getParentValue(Qn, RSMap), 8, 16)), concatenateMInt( (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 16, 24), extractMInt(getParentValue(Qn, RSMap), 16, 24)) then extractMInt(getParentValue(Qm, RSMap), 16, 24) else extractMInt(getParentValue(Qn, RSMap), 16, 24)), concatenateMInt( (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 24, 32), extractMInt(getParentValue(Qn, RSMap), 24, 32)) then extractMInt(getParentValue(Qm, RSMap), 24, 32) else extractMInt(getParentValue(Qn, RSMap), 24, 32)), concatenateMInt((ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 32, 40), extractMInt(getParentValue(Qn, RSMap), 32, 40)) then extractMInt(getParentValue(Qm, RSMap), 32, 40) else extractMInt(getParentValue(Qn, RSMap), 32, 40)), concatenateMInt((ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 40, 48), extractMInt(getParentValue(Qn, RSMap), 40, 48)) then extractMInt(getParentValue(Qm, RSMap), 40, 48) else extractMInt(getParentValue(Qn, RSMap), 40, 48)), concatenateMInt( (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 48, 56), extractMInt(getParentValue(Qn, RSMap), 48, 56)) then extractMInt(getParentValue(Qm, RSMap), 48, 56) else extractMInt(getParentValue(Qn, RSMap), 48, 56)), concatenateMInt( (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 56, 64), extractMInt(getParentValue(Qn, RSMap), 56, 64)) then extractMInt(getParentValue(Qm, RSMap), 56, 64) else extractMInt(getParentValue(Qn, RSMap), 56, 64)), concatenateMInt( (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 64, 72), extractMInt(getParentValue(Qn, RSMap), 64, 72)) then extractMInt(getParentValue(Qm, RSMap), 64, 72) else extractMInt(getParentValue(Qn, RSMap), 64, 72)), concatenateMInt( (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 72, 80), extractMInt(getParentValue(Qn, RSMap), 72, 80)) then extractMInt(getParentValue(Qm, RSMap), 72, 80) else extractMInt(getParentValue(Qn, RSMap), 72, 80)), concatenateMInt( (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 80, 88), extractMInt(getParentValue(Qn, RSMap), 80, 88)) then extractMInt(getParentValue(Qm, RSMap), 80, 88) else extractMInt(getParentValue(Qn, RSMap), 80, 88)), concatenateMInt( (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 88, 96), extractMInt(getParentValue(Qn, RSMap), 88, 96)) then extractMInt(getParentValue(Qm, RSMap), 88, 96) else extractMInt(getParentValue(Qn, RSMap), 88, 96)), concatenateMInt( (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 96, 104), extractMInt(getParentValue(Qn, RSMap), 96, 104)) then extractMInt(getParentValue(Qm, RSMap), 96, 104) else extractMInt(getParentValue(Qn, RSMap), 96, 104)), concatenateMInt( (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 104, 112), extractMInt(getParentValue(Qn, RSMap), 104, 112)) then extractMInt(getParentValue(Qm, RSMap), 104, 112) else extractMInt(getParentValue(Qn, RSMap), 104, 112)), concatenateMInt( (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 112, 120), extractMInt(getParentValue(Qn, RSMap), 112, 120)) then extractMInt(getParentValue(Qm, RSMap), 112, 120) else extractMInt(getParentValue(Qn, RSMap), 112, 120)), (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 120, 128), extractMInt(getParentValue(Qn, RSMap), 120, 128)) then extractMInt(getParentValue(Qm, RSMap), 120, 128) else extractMInt(getParentValue(Qn, RSMap), 120, 128)) )))))))))))))))
         else /* U8 size */ (ifMInt (S ==K U8) then concatenateMInt( (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 0, 8), extractMInt(getParentValue(Qn, RSMap), 0, 8)) then extractMInt(getParentValue(Qm, RSMap), 0, 8) else extractMInt(getParentValue(Qn, RSMap), 0, 8)), concatenateMInt( (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 8, 16), extractMInt(getParentValue(Qn, RSMap), 8, 16)) then extractMInt(getParentValue(Qm, RSMap), 8, 16) else extractMInt(getParentValue(Qn, RSMap), 8, 16)), concatenateMInt( (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 16, 24), extractMInt(getParentValue(Qn, RSMap), 16, 24)) then extractMInt(getParentValue(Qm, RSMap), 16, 24) else extractMInt(getParentValue(Qn, RSMap), 16, 24)), concatenateMInt( (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 24, 32), extractMInt(getParentValue(Qn, RSMap), 24, 32)) then extractMInt(getParentValue(Qm, RSMap), 24, 32) else extractMInt(getParentValue(Qn, RSMap), 24, 32)), concatenateMInt((ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 32, 40), extractMInt(getParentValue(Qn, RSMap), 32, 40)) then extractMInt(getParentValue(Qm, RSMap), 32, 40) else extractMInt(getParentValue(Qn, RSMap), 32, 40)), concatenateMInt((ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 40, 48), extractMInt(getParentValue(Qn, RSMap), 40, 48)) then extractMInt(getParentValue(Qm, RSMap), 40, 48) else extractMInt(getParentValue(Qn, RSMap), 40, 48)), concatenateMInt( (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 48, 56), extractMInt(getParentValue(Qn, RSMap), 48, 56)) then extractMInt(getParentValue(Qm, RSMap), 48, 56) else extractMInt(getParentValue(Qn, RSMap), 48, 56)), concatenateMInt( (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 56, 64), extractMInt(getParentValue(Qn, RSMap), 56, 64)) then extractMInt(getParentValue(Qm, RSMap), 56, 64) else extractMInt(getParentValue(Qn, RSMap), 56, 64)), concatenateMInt( (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 64, 72), extractMInt(getParentValue(Qn, RSMap), 64, 72)) then extractMInt(getParentValue(Qm, RSMap), 64, 72) else extractMInt(getParentValue(Qn, RSMap), 64, 72)), concatenateMInt( (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 72, 80), extractMInt(getParentValue(Qn, RSMap), 72, 80)) then extractMInt(getParentValue(Qm, RSMap), 72, 80) else extractMInt(getParentValue(Qn, RSMap), 72, 80)), concatenateMInt( (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 80, 88), extractMInt(getParentValue(Qn, RSMap), 80, 88)) then extractMInt(getParentValue(Qm, RSMap), 80, 88) else extractMInt(getParentValue(Qn, RSMap), 80, 88)), concatenateMInt( (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 88, 96), extractMInt(getParentValue(Qn, RSMap), 88, 96)) then extractMInt(getParentValue(Qm, RSMap), 88, 96) else extractMInt(getParentValue(Qn, RSMap), 88, 96)), concatenateMInt( (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 96, 104), extractMInt(getParentValue(Qn, RSMap), 96, 104)) then extractMInt(getParentValue(Qm, RSMap), 96, 104) else extractMInt(getParentValue(Qn, RSMap), 96, 104)), concatenateMInt( (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 104, 112), extractMInt(getParentValue(Qn, RSMap), 104, 112)) then extractMInt(getParentValue(Qm, RSMap), 104, 112) else extractMInt(getParentValue(Qn, RSMap), 104, 112)), concatenateMInt( (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 112, 120), extractMInt(getParentValue(Qn, RSMap), 112, 120)) then extractMInt(getParentValue(Qm, RSMap), 112, 120) else extractMInt(getParentValue(Qn, RSMap), 112, 120)), (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 120, 128), extractMInt(getParentValue(Qn, RSMap), 120, 128)) then extractMInt(getParentValue(Qm, RSMap), 120, 128) else extractMInt(getParentValue(Qn, RSMap), 120, 128)) )))))))))))))))
         else /* S16 size */ (ifMInt (S ==K S16) then concatenateMInt( (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 0, 16), extractMInt(getParentValue(Qn, RSMap), 0, 16)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 0, 8), extractMInt(getParentValue(Qm, RSMap), 8, 16)) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 0, 8), extractMInt(getParentValue(Qn, RSMap), 8, 16))), concatenateMInt( (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 16, 32), extractMInt(getParentValue(Qn, RSMap), 16, 32)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 16, 24), extractMInt(getParentValue(Qm, RSMap), 24, 32)) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 16, 24), extractMInt(getParentValue(Qn, RSMap), 24, 32))), concatenateMInt( (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 32, 48), extractMInt(getParentValue(Qn, RSMap), 32, 48)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 32, 40), extractMInt(getParentValue(Qm, RSMap), 40, 48)) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 32, 40), extractMInt(getParentValue(Qn, RSMap), 40, 48))), concatenateMInt( (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 48, 64), extractMInt(getParentValue(Qn, RSMap), 48, 64)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 48, 56), extractMInt(getParentValue(Qm, RSMap), 56, 64)) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 48, 56), extractMInt(getParentValue(Qn, RSMap), 56, 64))), concatenateMInt((ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 64, 80), extractMInt(getParentValue(Qn, RSMap), 64, 80)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 64, 72), extractMInt(getParentValue(Qm, RSMap), 72, 80)) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 64, 72), extractMInt(getParentValue(Qn, RSMap), 72, 80))), concatenateMInt((ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 80, 96), extractMInt(getParentValue(Qn, RSMap), 80, 96)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 80, 88), extractMInt(getParentValue(Qm, RSMap), 88, 96)) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 80, 88), extractMInt(getParentValue(Qn, RSMap), 88, 96))), concatenateMInt( (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 96, 112), extractMInt(getParentValue(Qn, RSMap), 96, 112)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 96, 104), extractMInt(getParentValue(Qm, RSMap), 104, 112)) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 96, 104), extractMInt(getParentValue(Qn, RSMap), 104, 112))), (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 112, 128), extractMInt(getParentValue(Qn, RSMap), 112, 128)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 112, 120), extractMInt(getParentValue(Qm, RSMap), 120, 128)) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 112, 120), extractMInt(getParentValue(Qn, RSMap), 120, 128))))))))))
         else /* U16 size */ (ifMInt (S ==K U16) then concatenateMInt( (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 0, 16), extractMInt(getParentValue(Qn, RSMap), 0, 16)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 0, 8), extractMInt(getParentValue(Qm, RSMap), 8, 16)) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 0, 8), extractMInt(getParentValue(Qn, RSMap), 8, 16))), concatenateMInt( (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 16, 32), extractMInt(getParentValue(Qn, RSMap), 16, 32)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 16, 24), extractMInt(getParentValue(Qm, RSMap), 24, 32)) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 16, 24), extractMInt(getParentValue(Qn, RSMap), 24, 32))), concatenateMInt( (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 32, 48), extractMInt(getParentValue(Qn, RSMap), 32, 48)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 32, 40), extractMInt(getParentValue(Qm, RSMap), 40, 48)) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 32, 40), extractMInt(getParentValue(Qn, RSMap), 40, 48))), concatenateMInt( (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 48, 64), extractMInt(getParentValue(Qn, RSMap), 48, 64)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 48, 56), extractMInt(getParentValue(Qm, RSMap), 56, 64)) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 48, 56), extractMInt(getParentValue(Qn, RSMap), 56, 64))), concatenateMInt((ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 64, 80), extractMInt(getParentValue(Qn, RSMap), 64, 80)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 64, 72), extractMInt(getParentValue(Qm, RSMap), 72, 80)) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 64, 72), extractMInt(getParentValue(Qn, RSMap), 72, 80))), concatenateMInt((ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 80, 96), extractMInt(getParentValue(Qn, RSMap), 80, 96)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 80, 88), extractMInt(getParentValue(Qm, RSMap), 88, 96)) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 80, 88), extractMInt(getParentValue(Qn, RSMap), 88, 96))), concatenateMInt( (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 96, 112), extractMInt(getParentValue(Qn, RSMap), 96, 112)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 96, 104), extractMInt(getParentValue(Qm, RSMap), 104, 112)) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 96, 104), extractMInt(getParentValue(Qn, RSMap), 104, 112))), (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 112, 128), extractMInt(getParentValue(Qn, RSMap), 112, 128)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 112, 120), extractMInt(getParentValue(Qm, RSMap), 120, 128)) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 112, 120), extractMInt(getParentValue(Qn, RSMap), 120, 128))))))))))
         else /* S32 size */ (ifMInt (S ==K S32) then concatenateMInt( (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 0, 32), extractMInt(getParentValue(Qn, RSMap), 0, 32)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 0, 8), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 8, 16), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 16, 24), extractMInt(getParentValue(Qm, RSMap), 24, 32)))) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 0, 8), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 8, 16), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 16, 24), extractMInt(getParentValue(Qn, RSMap), 24, 32))))), concatenateMInt( (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 32, 64), extractMInt(getParentValue(Qn, RSMap), 32, 64)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 32, 40), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 40, 48), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 48, 56), extractMInt(getParentValue(Qm, RSMap), 56, 64)))) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 32, 40), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 40, 48), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 48, 56), extractMInt(getParentValue(Qn, RSMap), 56, 64))))), concatenateMInt( (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 64, 96), extractMInt(getParentValue(Qn, RSMap), 64, 96)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 64, 72), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 72, 80), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 80, 88), extractMInt(getParentValue(Qm, RSMap), 88, 96)))) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 64, 72), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 72, 80), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 80, 88), extractMInt(getParentValue(Qn, RSMap), 88, 96))))), (ifMInt sgeMInt( extractMInt(getParentValue(Qm, RSMap), 96, 128), extractMInt(getParentValue(Qn, RSMap), 96, 128)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 96, 104), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 104, 112), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 112, 120), extractMInt(getParentValue(Qm, RSMap), 120, 128)))) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 96, 104), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 104, 112), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 112, 120), extractMInt(getParentValue(Qn, RSMap), 120, 128))))))))
         else /* U32 size */ (ifMInt (S ==K U32) then concatenateMInt( (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 0, 32), extractMInt(getParentValue(Qn, RSMap), 0, 32)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 0, 8), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 8, 16), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 16, 24), extractMInt(getParentValue(Qm, RSMap), 24, 32)))) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 0, 8), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 8, 16), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 16, 24), extractMInt(getParentValue(Qn, RSMap), 24, 32))))), concatenateMInt( (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 32, 64), extractMInt(getParentValue(Qn, RSMap), 32, 64)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 32, 40), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 40, 48), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 48, 56), extractMInt(getParentValue(Qm, RSMap), 56, 64)))) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 32, 40), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 40, 48), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 48, 56), extractMInt(getParentValue(Qn, RSMap), 56, 64))))), concatenateMInt( (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 64, 96), extractMInt(getParentValue(Qn, RSMap), 64, 96)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 64, 72), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 72, 80), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 80, 88), extractMInt(getParentValue(Qm, RSMap), 88, 96)))) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 64, 72), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 72, 80), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 80, 88), extractMInt(getParentValue(Qn, RSMap), 88, 96))))), (ifMInt ugeMInt( extractMInt(getParentValue(Qm, RSMap), 96, 128), extractMInt(getParentValue(Qn, RSMap), 96, 128)) then concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 96, 104), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 104, 112), concatenateMInt(extractMInt(getParentValue(Qm, RSMap), 112, 120), extractMInt(getParentValue(Qm, RSMap), 120, 128)))) else concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 96, 104), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 104, 112), concatenateMInt(extractMInt(getParentValue(Qn, RSMap), 112, 120), extractMInt(getParentValue(Qn, RSMap), 120, 128))))))))
         else /* exception */ mi(128, -1)
           ))))))
         else mi(128, -1))
         )
       </regstate>
endmodule
