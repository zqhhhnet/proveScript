Parse command line options                                   =  0.000s
XXXXXXXXXXX

YYYYYYYYYYY

QQQQQQQQQQQ

SSSSSSSSSSS

ZZZZZZZZZZZZ

AAAAAAAAAAAA

DDDDDDDDDDDDD

Importing: Source(/home/hhh1/PsCom/././test-spec-ext.k)
Importing: Source(/home/hhh1/PsCom/test-spec-ext.k)
Importing: Source(/home/hhh1/PsCom/armv8-semantics.k)
Importing: Source(/home/hhh1/PsCom/armv8-loader.k)
Importing: Source(/home/hhh1/PsCom/armv8-configuration.k)
Importing: Source(/home/hhh1/PsCom/armv8-syntax.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/armv8-abstract-syntax.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/armv8-mint.k)
Importing: Source(/home/hhh1/PsCom/armv8-conversions.k)
222222222222222222222

222222222222222222222

222222222222222222222

222222222222222222222

Importing: Source(/home/hhh1/PsCom/vmax.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/armv8-abstract-semantic.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/armv8-verification.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/exit.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/vmaxnm.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/vmov.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/vmaxa.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/vmaxnma.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/vmaxnmv.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/mov.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/vmaxnmav.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/vmaxv.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/vmaxav.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/vmin.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/vmina.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/vminv.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/vminav.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/vminnm.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/vminnma.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/vminnmv.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/vminnmav.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/vmlav.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/add-for-test.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/max-for-test.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/sst.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/ext.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/dtc.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/cmp.k)
222222222222222222222

Importing: Source(/home/hhh1/PsCom/sto.k)
222222222222222222222

222222222222222222222

222222222222222222222

222222222222222222222

EEEEEEEEEEEEE

FFFFFFFFFFFFF

GGGGGGGGGGGGG

HHHHHHHHHHH

IIIIIIIIIII

1111110000000

1111110000000

JJJJJJJJJJJJ

HHHHHHHHHHHH

IIIIIIIIIIIII

55555555555555

666666666666

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

1111110000000

1111110000000

77777777777

88888888888

999999999999

666666666666

1111110000000

77777777777

88888888888

999999999999

KKKKKKKKKKKK

CCCCCCCCC

Parse spec modules [0/571 rules]                             =  0.012s
BBBBBBBBBBBBB

specModule ###

module TEST-SPEC-EXT [org.kframework.attributes.Location(Location(3,1,51,9)) org.kframework.attributes.Source(Source(/home/hhh1/PsCom/test-spec-ext.k))]
  imports TEST-SPEC-EXT$SYNTAX
  imports ARMV8-SEMANTICS
  rule `<generatedTop>`(`<k>`(#token("scan","KItem")=>`End_ARMV8-LOADER`(.KList)),`<begin>`(#EmptyK(.KList)),`<currentstate>`(#token("\"text\"","String")),`<nextloc>`(_0),`<functarget>`(`_|->_`(#token("start","Start"),mi(#token("32","Int"),#token("0","Int")))),`<instructiontext>`(code(`_Map_`(`_|->_`(memloc(mi(#token("32","Int"),#token("0","Int"))),storedInstr(`_.___ARMV8-SYNTAX`(#token("ext","StepCommand"),`S8_ARMV8-SYNTAX`(.KList),`_,__ARMV8-SYNTAX`(`q0_ARMV8-SYNTAX`(.KList),`_,__ARMV8-SYNTAX`(`#__ARMV8-SYNTAX`(#token("0","Int")),`.List{"_,__ARMV8-SYNTAX"}`(.KList)))))),`_|->_`(memloc(mi(#token("32","Int"),#token("1","Int"))),storedInstr(`___ARMV8-SYNTAX`(`end_ARMV8-SYNTAX`(.KList),`.List{"_,__ARMV8-SYNTAX"}`(.KList))))))),`<regstate>`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_|->_`(#token("\"CONTROL\"","String"),mi(#token("32","Int"),#token("1","Int"))),`_|->_`(#token("\"CONTROL_NS\"","String"),mi(#token("32","Int"),#token("1","Int")))),`_|->_`(#token("\"CONTROL_S\"","String"),mi(#token("32","Int"),#token("1","Int")))),`_|->_`(#token("\"CPACR\"","String"),mi(#token("32","Int"),#token("3145728","Int")))),`_|->_`(#token("\"CPACR_NS\"","String"),mi(#token("32","Int"),#token("3145728","Int")))),`_|->_`(#token("\"CPACR_S\"","String"),mi(#token("32","Int"),#token("3145728","Int")))),`_|->_`(#token("\"CPPWR\"","String"),mi(#token("32","Int"),#token("0","Int")))),`_|->_`(#token("\"CPPWR_NS\"","String"),mi(#token("32","Int"),#token("0","Int")))),`_|->_`(#token("\"CPPWR_S\"","String"),mi(#token("32","Int"),#token("0","Int")))),`_|->_`(#token("\"EPSR\"","String"),mi(#token("32","Int"),#token("2048","Int")))),`_|->_`(#token("\"FPCCR\"","String"),mi(#token("32","Int"),#token("0","Int")))),`_|->_`(#token("\"FPCCR_NS\"","String"),mi(#token("32","Int"),#token("0","Int")))),`_|->_`(#token("\"FPCCR_S\"","String"),mi(#token("32","Int"),#token("0","Int")))),`_|->_`(#token("\"MVFR1\"","String"),mi(#token("32","Int"),#token("256","Int")))),`_|->_`(#token("\"NSACR\"","String"),mi(#token("32","Int"),#token("1024","Int")))),`_|->_`(#token("\"VPR\"","String"),mi(#token("32","Int"),#token("2048","Int")))),`_|->_`(#token("\"Q0\"","String"),mi(#token("128","Int"),A))),`_|->_`(#token("\"TEMP1\"","String"),extractMInt(mi(#token("128","Int"),A),#token("120","Int"),#token("128","Int")))),`_|->_`(#token("\"R15\"","String"),memloc(mi(#token("32","Int"),#token("0","Int")))))=>`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_|->_`(#token("\"CONTROL\"","String"),mi(#token("32","Int"),#token("1","Int"))),`_|->_`(#token("\"CONTROL_NS\"","String"),mi(#token("32","Int"),#token("1","Int")))),`_|->_`(#token("\"CONTROL_S\"","String"),mi(#token("32","Int"),#token("1","Int")))),`_|->_`(#token("\"CPACR\"","String"),mi(#token("32","Int"),#token("3145728","Int")))),`_|->_`(#token("\"CPACR_NS\"","String"),mi(#token("32","Int"),#token("3145728","Int")))),`_|->_`(#token("\"CPACR_S\"","String"),mi(#token("32","Int"),#token("3145728","Int")))),`_|->_`(#token("\"CPPWR\"","String"),mi(#token("32","Int"),#token("0","Int")))),`_|->_`(#token("\"CPPWR_NS\"","String"),mi(#token("32","Int"),#token("0","Int")))),`_|->_`(#token("\"CPPWR_S\"","String"),mi(#token("32","Int"),#token("0","Int")))),`_|->_`(#token("\"EPSR\"","String"),mi(#token("32","Int"),#token("2048","Int")))),`_|->_`(#token("\"FPCCR\"","String"),mi(#token("32","Int"),#token("0","Int")))),`_|->_`(#token("\"FPCCR_NS\"","String"),mi(#token("32","Int"),#token("0","Int")))),`_|->_`(#token("\"FPCCR_S\"","String"),mi(#token("32","Int"),#token("0","Int")))),`_|->_`(#token("\"MVFR1\"","String"),mi(#token("32","Int"),#token("256","Int")))),`_|->_`(#token("\"NSACR\"","String"),mi(#token("32","Int"),#token("1024","Int")))),`_|->_`(#token("\"VPR\"","String"),mi(#token("32","Int"),#token("2048","Int")))),`_|->_`(#token("\"Q0\"","String"),mi(#token("128","Int"),A))),`_|->_`(#token("\"TEMP1\"","String"),extractMInt(mi(#token("128","Int"),A),#token("120","Int"),#token("128","Int")))),`_|->_`(#token("\"R15\"","String"),memloc(mi(#token("32","Int"),#token("2","Int")))))),DotVar0) requires `_andBool_`(`_>=Int_`(A,#token("0","Int")),`_<Int_`(A,`_^Int_`(#token("2","Int"),#token("128","Int")))) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(7) org.kframework.attributes.Location(Location(7,8,49,61)) org.kframework.attributes.Source(Source(/home/hhh1/PsCom/test-spec-ext.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) specification()]
endmodule

check ######

implies  this ???

#And(_==K_(_>=Int_(A:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

SMT query  @@@@@

(declare-fun andInt (Int Int) Int)
(declare-fun shlInt (Int Int) Int)
(declare-fun shrInt (Int Int) Int)
(declare-fun xorInt (Int Int) Int)
(declare-fun orInt (Int Int) Int)
(declare-fun notInt (Int) Int)
(declare-fun |A| () Int)
(assert (and
  (and
	(= (>= |A| 0) true)
	(= (< |A| 340282366920938463463374607431768211456) true))
  (not (and
	(= 0 |A|)))
))
SMT query  #####

implies  this ???

#And(_==K_(_>=Int_(A:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

SMT query  @@@@@

(declare-fun andInt (Int Int) Int)
(declare-fun shlInt (Int Int) Int)
(declare-fun shrInt (Int Int) Int)
(declare-fun xorInt (Int Int) Int)
(declare-fun orInt (Int Int) Int)
(declare-fun notInt (Int) Int)
(declare-fun |A| () Int)
(assert (and
  (and
	(= (>= |A| 0) true)
	(= (< |A| 340282366920938463463374607431768211456) true))
  (not (and
	(= (< |A| 0) true)))
))
SMT query  #####

implies  this ???

#And(_==K_(_>=Int_(A:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

implies  this ???

#And(_==K_(_>=Int_(A:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

implies  this ???

#And(_==K_(_>=Int_(A:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

implies  this ???

#And(_==K_(_>=Int_(A:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

SMT query  @@@@@

(declare-fun andInt (Int Int) Int)
(declare-fun shlInt (Int Int) Int)
(declare-fun shrInt (Int Int) Int)
(declare-fun xorInt (Int Int) Int)
(declare-fun orInt (Int Int) Int)
(declare-fun notInt (Int) Int)
(declare-fun |A| () Int)
(assert (and
  (and
	(= (>= |A| 0) true)
	(= (< |A| 340282366920938463463374607431768211456) true))
  (not (and
	(= (< |A| 256) true)))
))
SMT query  #####

implies  this ???

#And(_==K_(_>=Int_(A:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

implies  this ???

#And(_==K_(_>=Int_(A:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

cccc prove   111111

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

SMT query  @@@@@

(declare-fun andInt (Int Int) Int)
(declare-fun shlInt (Int Int) Int)
(declare-fun shrInt (Int Int) Int)
(declare-fun xorInt (Int Int) Int)
(declare-fun orInt (Int Int) Int)
(declare-fun notInt (Int) Int)
(declare-fun |A_728| () Int)
(assert (and
  (and
	(= (>= |A_728| 0) true)
	(= (< |A_728| 340282366920938463463374607431768211456) true))
  (not (and
	(= 0 |A_728|)))
))
SMT query  #####

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

SMT query  @@@@@

(declare-fun andInt (Int Int) Int)
(declare-fun shlInt (Int Int) Int)
(declare-fun shrInt (Int Int) Int)
(declare-fun xorInt (Int Int) Int)
(declare-fun orInt (Int Int) Int)
(declare-fun notInt (Int) Int)
(declare-fun |A_728| () Int)
(assert (and
  (and
	(= (>= |A_728| 0) true)
	(= (< |A_728| 340282366920938463463374607431768211456) true))
  (not (and
	(= (< |A_728| 0) true)))
))
SMT query  #####

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

SMT query  @@@@@

(declare-fun andInt (Int Int) Int)
(declare-fun shlInt (Int Int) Int)
(declare-fun shrInt (Int Int) Int)
(declare-fun xorInt (Int Int) Int)
(declare-fun orInt (Int Int) Int)
(declare-fun notInt (Int) Int)
(declare-fun |A_728| () Int)
(assert (and
  (and
	(= (>= |A_728| 0) true)
	(= (< |A_728| 340282366920938463463374607431768211456) true))
  (not (and
	(= (< |A_728| 256) true)))
))
SMT query  #####

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

cccc prove   33333

cccc 33333   00000

cccc 33333   11111

cccc 33333   22222

cccc 33333  loop  000

cccc 33333  loop  111

cccc 33333  loop  222

cccc 33333  loop  333

cccc 33333  loop  444

cccc 33333  buildRHS 2  0001111

cccc 33333  buildRHS 2  0002222

cccc 33333  buildRHS 2  0003333

cccc 33333  buildRHS 2  0004444

cccc 33333  buildRHS 2  0001111

cccc 33333  buildRHS 2  0002222

cccc 33333  buildRHS 2  0003333

cccc 33333  buildRHS 2  0004444

cccc 33333  buildRHS 2  0001111

cccc 33333  buildRHS 2  0005555

cccc 33333  buildRHS 2  0006666

cccc 33333  buildRHS 2  0001111

cccc 33333  buildRHS 2  0002222

cccc 33333  buildRHS 2  0003333

cccc 33333  buildRHS 2  0004444

cccc 33333  buildRHS 2  0001111

cccc 33333  buildRHS 2  0005555

cccc 33333  buildRHS 2  0006666

cccc 33333  buildRHS 2  0005555

cccc 33333  buildRHS 2  0006666

cccc 33333  loop  555

cccc 33333  loop  666

cccc 33333  loop  777

cccc 33333  loop  888

cccc 33333  loop  999

cccc 33333  loop  111000

cccc 33333  loop  111222

cccc 33333   33333

cccc prove   44444

cccc prove   55555

cccc prove   66666

cccc prove   777777

cccc prove   88888

cccc prove   111111

cccc prove  222222

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

SMT query  @@@@@

(declare-fun andInt (Int Int) Int)
(declare-fun shlInt (Int Int) Int)
(declare-fun shrInt (Int Int) Int)
(declare-fun xorInt (Int Int) Int)
(declare-fun orInt (Int Int) Int)
(declare-fun notInt (Int) Int)
(declare-fun |A_728| () Int)
(declare-fun |A| () Int)
(assert (and
  (and
	(= (>= |A_728| 0) true)
	(= (< |A_728| 340282366920938463463374607431768211456) true))
  (not (and
	(= 0 |A|)))
))
SMT query  #####

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

SMT query  @@@@@

(declare-fun andInt (Int Int) Int)
(declare-fun shlInt (Int Int) Int)
(declare-fun shrInt (Int Int) Int)
(declare-fun xorInt (Int Int) Int)
(declare-fun orInt (Int Int) Int)
(declare-fun notInt (Int) Int)
(declare-fun |A_728| () Int)
(declare-fun |A| () Int)
(assert (and
  (and
	(= (>= |A_728| 0) true)
	(= (< |A_728| 340282366920938463463374607431768211456) true))
  (not (and
	(= (< |A| 0) true)))
))
SMT query  #####

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

SMT query  @@@@@

(declare-fun andInt (Int Int) Int)
(declare-fun shlInt (Int Int) Int)
(declare-fun shrInt (Int Int) Int)
(declare-fun xorInt (Int Int) Int)
(declare-fun orInt (Int Int) Int)
(declare-fun notInt (Int) Int)
(declare-fun |A_728| () Int)
(declare-fun |A| () Int)
(assert (and
  (and
	(= (>= |A_728| 0) true)
	(= (< |A_728| 340282366920938463463374607431768211456) true))
  (not (and
	(= (>= |A| 0) true)))
))
SMT query  #####

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

cccc prove   33333

cccc 33333   00000

cccc 33333   11111

cccc 33333   22222

cccc 33333  loop  000

cccc 33333  loop  111

cccc 33333  loop  222

cccc 33333  loop  333

cccc 33333  loop  444

cccc 33333  buildRHS 2  0001111

cccc 33333  buildRHS 2  0002222

cccc 33333  buildRHS 2  0003333

cccc 33333  buildRHS 2  0004444

cccc 33333  buildRHS 2  0001111

cccc 33333  buildRHS 2  0002222

cccc 33333  buildRHS 2  0003333

cccc 33333  buildRHS 2  0004444

cccc 33333  buildRHS 2  0001111

cccc 33333  buildRHS 2  0005555

cccc 33333  buildRHS 2  0006666

cccc 33333  buildRHS 2  0001111

cccc 33333  buildRHS 2  0002222

cccc 33333  buildRHS 2  0003333

cccc 33333  buildRHS 2  0004444

cccc 33333  buildRHS 2  0001111

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

SMT query  @@@@@

(declare-fun andInt (Int Int) Int)
(declare-fun shlInt (Int Int) Int)
(declare-fun shrInt (Int Int) Int)
(declare-fun xorInt (Int Int) Int)
(declare-fun orInt (Int Int) Int)
(declare-fun notInt (Int) Int)
(declare-fun |A_728| () Int)
(assert (and
  (and
	(= (>= |A_728| 0) true)
	(= (< |A_728| 340282366920938463463374607431768211456) true))
  (not (and
	(= (< |A_728| 65536) true)))
))
SMT query  #####

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

SMT query  @@@@@

(declare-fun andInt (Int Int) Int)
(declare-fun shlInt (Int Int) Int)
(declare-fun shrInt (Int Int) Int)
(declare-fun xorInt (Int Int) Int)
(declare-fun orInt (Int Int) Int)
(declare-fun notInt (Int) Int)
(declare-fun |A_728| () Int)
(assert (and
  (and
	(= (>= |A_728| 0) true)
	(= (< |A_728| 340282366920938463463374607431768211456) true))
  (not (and
	(= (< |A_728| 4294967296) true)))
))
SMT query  #####

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

cccc 33333  buildRHS 2  0005555

cccc 33333  buildRHS 2  0006666

cccc 33333  buildRHS 2  0005555

cccc 33333  buildRHS 2  0006666

cccc 33333  loop  555

cccc 33333  loop  666

cccc 33333  loop  777

cccc 33333  loop  888

cccc 33333  loop  999

cccc 33333  loop  111000

cccc 33333  loop  111222

cccc 33333   33333

cccc prove   44444

cccc prove   55555

cccc prove   66666

cccc prove   777777

cccc prove   88888

cccc prove   111111

cccc prove  222222

cccc prove   33333

cccc 33333   00000

cccc 33333   11111

cccc 33333   22222

cccc 33333  loop  000

cccc 33333  loop  111

cccc 33333  loop  222

cccc 33333  loop  333

cccc 33333  loop  444

cccc 33333  buildRHS 2  0001111

cccc 33333  buildRHS 2  0002222

cccc 33333  buildRHS 2  0003333

cccc 33333  buildRHS 2  0004444

cccc 33333  buildRHS 2  0001111

cccc 33333  buildRHS 2  0002222

cccc 33333  buildRHS 2  0003333

cccc 33333  buildRHS 2  0004444

cccc 33333  buildRHS 2  0001111

cccc 33333  buildRHS 2  0005555

cccc 33333  buildRHS 2  0006666

cccc 33333  buildRHS 2  0001111

cccc 33333  buildRHS 2  0002222

cccc 33333  buildRHS 2  0003333

cccc 33333  buildRHS 2  0004444

cccc 33333  buildRHS 2  0001111

cccc 33333  buildRHS 2  0005555

cccc 33333  buildRHS 2  0006666

cccc 33333  buildRHS 2  0005555

cccc 33333  buildRHS 2  0006666

cccc 33333  loop  555

cccc 33333  loop  666

cccc 33333  loop  777

cccc 33333  loop  888

cccc 33333  loop  999

cccc 33333  loop  111000

cccc 33333  loop  111222

cccc 33333   33333

cccc prove   44444

cccc prove   55555

cccc prove   66666

cccc prove   777777

cccc prove   88888

cccc prove   111111

cccc prove  222222

cccc prove   33333

cccc 33333   00000

cccc 33333   11111

cccc 33333   22222

cccc 33333  loop  000

cccc 33333  loop  111

cccc 33333  loop  222

cccc 33333  loop  333

cccc 33333  loop  444

cccc 33333  buildRHS  ssss

cccc 33333  buildRHS  0002222

cccc 33333  buildRHS  0003333

cccc 33333  buildRHS  ssss

cccc 33333  buildRHS  0002222

cccc 33333  buildRHS  0003333

cccc 33333  buildRHS  ssss

cccc 33333  buildRHS  0001111

cccc 33333  buildRHS  0004444

cccc 33333  buildRHS  0004444

cccc 33333  loop  555

cccc 33333  loop  666

cccc 33333  loop  777

cccc 33333  loop  888

cccc 33333  loop  999

cccc 33333  loop  111000

cccc 33333  loop  111222

cccc 33333   33333

cccc prove   44444

cccc prove   55555

cccc prove   66666

cccc prove   777777

cccc prove   88888

cccc prove   111111

cccc prove  222222

cccc prove   33333

cccc 33333   00000

cccc 33333   11111

cccc 33333   22222

cccc 33333  loop  000

cccc 33333  loop  111

cccc 33333  loop  222

cccc 33333  loop  333

cccc 33333  loop  444

cccc 33333  buildRHS  ssss

cccc 33333  buildRHS  0002222

cccc 33333  buildRHS  0003333

cccc 33333  buildRHS  ssss

cccc 33333  buildRHS  0002222

cccc 33333  buildRHS  0003333

cccc 33333  buildRHS  ssss

cccc 33333  buildRHS  0001111

cccc 33333  buildRHS  0004444

cccc 33333  buildRHS  0004444

cccc 33333  loop  555

cccc 33333  loop  666

cccc 33333  loop  777

cccc 33333  loop  888

cccc 33333  loop  999

cccc 33333  loop  111000

cccc 33333  loop  111222

cccc 33333   33333

cccc prove   44444

cccc prove   55555

cccc prove   66666

cccc prove   777777

cccc prove   88888

cccc prove   111111

cccc prove  222222

cccc prove   33333

cccc 33333   00000

cccc 33333   11111

cccc 33333   22222

cccc 33333  loop  000

cccc 33333  loop  111

cccc 33333  loop  222

cccc 33333  loop  333

cccc 33333  loop  444

cccc 33333  buildRHS  ssss

cccc 33333  buildRHS  0002222

cccc 33333  buildRHS  0003333

cccc 33333  buildRHS  ssss

cccc 33333  buildRHS  0002222

cccc 33333  buildRHS  0003333

cccc 33333  buildRHS  ssss

cccc 33333  buildRHS  0001111

cccc 33333  buildRHS  0004444

cccc 33333  buildRHS  0004444

cccc 33333  loop  555

cccc 33333  loop  666

cccc 33333  loop  777

cccc 33333  loop  888

cccc 33333  loop  999

cccc 33333  loop  111000

cccc 33333  loop  111222

cccc 33333   33333

cccc prove   44444

cccc prove   55555

cccc prove   66666

cccc prove   777777

cccc prove   88888

cccc prove   111111

implies  this ???

#And(_==K_(_>=Int_(A_728:Int,, Int(#"0")),, Bool(#"true")),, _==K_(_<Int_(A_728:Int,, Int(#"340282366920938463463374607431768211456")),, Bool(#"true")))

implies  this ...

#True
